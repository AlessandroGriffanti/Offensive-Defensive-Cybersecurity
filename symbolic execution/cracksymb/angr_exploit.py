

#Let's import what we need 
import claripy
import angr

#let's create a project
proj = angr.Project("./cracksymb")

argv = ['./cracksymb']                                                  # argv[0] will be the path to the program

chars = [claripy.BVS('c%d' % i, 8) for i in range(23)]                  # 20 bytes
input_str = claripy.Concat(*chars + [claripy.BVV(b'\n')])               # + \n

initial_state = proj.factory.entry_state(stdin=input_str, add_options={angr.options.LAZY_SOLVES})    # use as stdin                                                 

# make sure all chars are printable
for c in chars:
    initial_state.solver.add(c >= 0x20, c <= 0x7e)                             

simgr = proj.factory.simulation_manager(initial_state)

#define what to find and what to avoid
to_find = [0x00000000004033BB, 0x0000000000403370]
to_avoid = [0x00000000004033b9, 0x00000000004033C9]


simgr.explore(find=to_find, avoid=to_avoid)        # explore...

if simgr.found:                                                         # we execute until something is found
 found = simgr.found[0]
 print(simgr.found[0].posix.dumps(0))                                   # dump content of stdin  